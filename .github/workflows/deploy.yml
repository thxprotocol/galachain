name: API CI

on:
  push:

jobs:
  buildAndTest:
    name: Deploy Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x] # Add other versions if needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm i

      - name: Cache Node.js dependencies
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

  buildAndPushImage:
    name: Build and Push docker image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: bumpVersion
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  
